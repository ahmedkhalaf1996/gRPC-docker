syntax = "proto3";

option csharp_namespace = "client.Protos";

// Message for the request
message SampleRequest {
  string id = 1;
}

// Message for the response
message SampleResponse {
  string message = 1;
}

// gRPC service definition
service Sample {
  // Unary RPC method
  rpc GetData(SampleRequest) returns (SampleResponse);
}


// syntax = "proto3";

// // package chat;
// option csharp_namespace = "backend.Protos";


// service RealTimeChatService {
//   rpc SendMessage(MessageRequest) returns (MessageResponse) {}
//   rpc GetUserFollowingFollowers(UserID) returns (UsersIDsListResponse){}
// }

// message MessageRequest {
//   string content = 1;
//   string sender = 2;
//   string receiver = 3;
// }

// message MessageResponse {
//   string message = 1;
// }

// // --
// message UserID {
//   string userid = 1;
// }

// message UsersIDsListResponse {
//   repeated UserIDsList userIDsLists = 1;
// }

// message UserIDsList {
//   repeated string userIdsList = 1;
// }